version: '3.8'

services:
  paca-api:
    build: .
    container_name: paca-production
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9090:9090"
    environment:
      - PACA_ENV=production
      - PACA_DEBUG=false
      - PACA_HOST=0.0.0.0
      - PACA_PORT=8000
      - PACA_LOG_LEVEL=INFO
      - PACA_METRICS_ENABLED=true
      - PACA_METRICS_PORT=9090
    volumes:
      - paca_data:/var/lib/paca
      - paca_logs:/var/log/paca
      - ./config:/app/config:ro
    networks:
      - paca-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: paca-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - paca-network

  grafana:
    image: grafana/grafana:latest
    container_name: paca-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - paca-network
    depends_on:
      - prometheus

networks:
  paca-network:
    driver: bridge

volumes:
  paca_data:
  paca_logs:
  prometheus_data:
  grafana_data: